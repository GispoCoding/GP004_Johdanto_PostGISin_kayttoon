version: '3.7'

services:
  postgres_training:
    image: kartoza/postgis:14-3
    volumes:
      - postgres_training_data:/var/lib/postgresql/data/
      - ./Harjoitukset/data:/home/oppilas/pg-training/Harjoitukset/data
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASS=${POSTGRES_PASS:-postgres}
      - POSTGRES_DB=${POSTGRES_DB:-postgres}
      - ALLOW_IP_RANGE=0.0.0.0/0
    expose:
      - "5432"
    restart: unless-stopped

  pgadmin:
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-notreal.email@thisdomaindoesnotexisist.fi}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-testpass}
    depends_on:
      - postgres_training
    expose:
      - "80"
    restart: unless-stopped

  jupyter:
    build:
      context: ./docker
      dockerfile: jupyter.Dockerfile
    volumes:
      - ./:/home/oppilas/pg-training
      - ./scripts/initializer.sh:/usr/local/bin/before-notebook.d/initializer.sh
    environment:
      - NB_USER=oppilas
      - CHOWN_HOME=yes
      - RESTARTABLE=yes
      - JUPYTER_TOKEN=${POSTGRES_PASS:-postgres}
      - PGUSER=${POSTGRES_USER:-postgres}
      - PGPASSWORD=${POSTGRES_PASS:-postgres}
      - PGDATABASE=${POSTGRES_DB:-postgres}
      - PGHOST=postgres_training
    working_dir: /home/oppilas/pg-training/Harjoitukset
    depends_on:
      - postgres_training
    expose:
      - "8888"
    restart: unless-stopped

  nginx:
    build:
      context: ./docker
      dockerfile: nginx.Dockerfile
    ports:
      - 80:80
      - 443:443
    depends_on:
      - jupyter
    restart: unless-stopped

volumes:
  postgres_training_data:
